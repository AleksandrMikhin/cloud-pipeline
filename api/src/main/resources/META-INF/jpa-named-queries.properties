StoragePermissionRepository.findExactOrParentPermissions = \
SELECT length(datastorage_path), * \
FROM pipeline.datastorage_permission \
WHERE datastorage_root_id = :datastorage_root_id \
AND datastorage_type = 'FOLDER' \
AND (datastorage_path = '' \
    OR datastorage_path != :datastorage_path \
    AND position(datastorage_path in :datastorage_path) = 1 \
AND substring(substring(:datastorage_path from (length(datastorage_path) + 1)), 1, 1) = '/') \
AND length(datastorage_path) = \
( \
    SELECT max(length(datastorage_path)) FROM pipeline.datastorage_permission \
    WHERE datastorage_root_id = :datastorage_root_id \
    AND datastorage_type = 'FOLDER' \
    AND (datastorage_path = '' \
    OR datastorage_path != :datastorage_path \
    AND position(datastorage_path in :datastorage_path) = 1 \
    AND substring(substring(:datastorage_path from (length(datastorage_path) + 1)), 1, 1) = '/') \
) \
UNION \
SELECT length(datastorage_path), * FROM pipeline.datastorage_permission \
WHERE datastorage_root_id = :datastorage_root_id \
AND datastorage_type = (:datastorage_type)\\:\\:datastorage_item_type \
AND datastorage_path = :datastorage_path \
ORDER BY 1 DESC

StoragePermissionRepository.findReadAllowedDirectChildItems = \
SELECT DISTINCT ON (p.datastorage_path) p.datastorage_path as datastorage_path, \
CASE \
    WHEN length(substr(p.datastorage_child_path, length(p.datastorage_path) + 1)) = 0 \
    THEN p.datastorage_child_type \
    ELSE 'FOLDER' \
END as datastorage_type \
FROM \
( \
    SELECT \
        :datastorage_path || '/' || coalesce(nullif(substr(regexp_replace(coalesce(user_permission.datastorage_path, groups_permission.datastorage_path), '^' || :datastorage_path || '/', ''), 0, position('/' in regexp_replace(coalesce(user_permission.datastorage_path, groups_permission.datastorage_path), '^' || :datastorage_path || '/', ''))), ''), regexp_replace(coalesce(user_permission.datastorage_path, groups_permission.datastorage_path), '^' || :datastorage_path || '/', '')) as datastorage_path, \
        coalesce(user_permission.datastorage_path, groups_permission.datastorage_path) as datastorage_child_path, \
        coalesce(user_permission.datastorage_type, groups_permission.datastorage_type) as datastorage_child_type \
    FROM \
    ( \
        SELECT p.datastorage_path, p.datastorage_type, bit_or(p.mask) as mask \
        FROM pipeline.datastorage_permission p \
        WHERE p.datastorage_root_id = :datastorage_root_id \
        AND p.sid_type = 'USER' \
        AND p.sid_name = :user_sid_name \
        AND p.datastorage_path LIKE :datastorage_path || '/%' \
        GROUP BY p.datastorage_path, p.datastorage_type \
    ) user_permission \
    FULL JOIN \
    ( \
        SELECT p.datastorage_path, p.datastorage_type, bit_or(p.mask) as mask \
        FROM pipeline.datastorage_permission p \
        WHERE p.datastorage_root_id = :datastorage_root_id \
        AND p.sid_type = 'GROUP' \
        AND p.sid_name in :group_sid_names \
        AND p.datastorage_path LIKE :datastorage_path || '/%' \
        GROUP BY p.datastorage_path, p.datastorage_type \
    ) groups_permission \
    ON (user_permission.datastorage_path = groups_permission.datastorage_path \
    AND user_permission.datastorage_type = groups_permission.datastorage_type) \
    WHERE coalesce(user_permission.mask, groups_permission.mask) & 1 = 1 \
) p \
ORDER BY 1

StoragePermissionRepository.findReadAllowedRootDirectChildItems = \
SELECT \
DISTINCT ON (p.datastorage_path) p.datastorage_path as datastorage_path, \
CASE \
    WHEN length(substr(p.datastorage_child_path, length(p.datastorage_path) + 1)) = 0 \
    THEN p.datastorage_child_type \
    ELSE 'FOLDER' \
END as datastorage_type \
FROM ( \
    SELECT \
    coalesce(nullif(substr(coalesce(user_permission.datastorage_path, groups_permission.datastorage_path), 0, position('/' in coalesce(user_permission.datastorage_path, groups_permission.datastorage_path))), ''), coalesce(user_permission.datastorage_path, groups_permission.datastorage_path)) as datastorage_path, \
    coalesce(user_permission.datastorage_path, groups_permission.datastorage_path) as datastorage_child_path, \
    coalesce(user_permission.datastorage_type, groups_permission.datastorage_type) as datastorage_child_type \
    FROM \
    ( \
        SELECT p.datastorage_path, p.datastorage_type, bit_or(p.mask) as mask \
        FROM pipeline.datastorage_permission p \
        WHERE p.datastorage_root_id = :datastorage_root_id \
        AND p.sid_type = 'USER' \
        AND p.sid_name = :user_sid_name \
        GROUP BY p.datastorage_path, p.datastorage_type \
    ) user_permission \
    FULL JOIN \
    ( \
        SELECT p.datastorage_path, p.datastorage_type, bit_or(p.mask) as mask \
        FROM pipeline.datastorage_permission p \
        WHERE p.datastorage_root_id = :datastorage_root_id \
        AND p.sid_type = 'GROUP' \
        AND p.sid_name in :group_sid_names \
        GROUP BY p.datastorage_path, p.datastorage_type \
    ) groups_permission \
    ON (user_permission.datastorage_path = groups_permission.datastorage_path \
    AND user_permission.datastorage_type = groups_permission.datastorage_type) \
    WHERE coalesce(user_permission.mask, groups_permission.mask) & 1 = 1 \
) p \
ORDER BY 1

StoragePermissionRepository.findReadAllowedStorages = \
SELECT \
    s.datastorage_id as storage_id, \
    'DATA_STORAGE'\\:\\:varchar as storage_type \
FROM \
( \
    SELECT p.datastorage_root_id, p.datastorage_path, p.datastorage_type, bit_or(p.mask) as mask \
    FROM pipeline.datastorage_permission p \
    WHERE p.sid_type = 'USER' \
    AND p.sid_name = :user_sid_name \
    GROUP BY p.datastorage_root_id, p.datastorage_path, p.datastorage_type \
) user_permission \
FULL JOIN \
( \
    SELECT p.datastorage_root_id, p.datastorage_path, p.datastorage_type, bit_or(p.mask) as mask \
    FROM pipeline.datastorage_permission p \
    WHERE p.sid_type = 'GROUP' \
    AND p.sid_name in :group_sid_names \
    GROUP BY p.datastorage_root_id, p.datastorage_path, p.datastorage_type \
) groups_permission \
ON (user_permission.datastorage_root_id = groups_permission.datastorage_root_id \
AND user_permission.datastorage_path = groups_permission.datastorage_path \
AND user_permission.datastorage_type = groups_permission.datastorage_type) \
LEFT JOIN pipeline.datastorage_root r \
ON r.datastorage_root_id = coalesce(user_permission.datastorage_root_id, groups_permission.datastorage_root_id) \
LEFT JOIN pipeline.datastorage s \
ON r.datastorage_root_id = s.datastorage_root_id \
WHERE coalesce(user_permission.mask, groups_permission.mask) & 1 = 1 \
GROUP BY s.datastorage_id

StoragePermissionRepository.findRootDirectChildPermissions = \
SELECT \
    coalesce(user_permission.datastorage_path, groups_permission.datastorage_path) as datastorage_path, \
    coalesce(user_permission.datastorage_type, groups_permission.datastorage_type) as datastorage_type, \
    coalesce(user_permission.mask, groups_permission.mask) as mask \
FROM \
( \
    SELECT p.datastorage_path, p.datastorage_type, bit_or(p.mask) as mask \
    FROM pipeline.datastorage_permission p \
    WHERE p.datastorage_root_id = :datastorage_root_id \
    AND p.datastorage_path != '' \
    AND p.datastorage_path NOT LIKE '%/%' \
    AND p.sid_type = 'USER' \
    AND p.sid_name = :user_sid_name \
    GROUP BY p.datastorage_path, p.datastorage_type \
) user_permission \
FULL JOIN \
( \
    SELECT p.datastorage_path, p.datastorage_type, bit_or(p.mask) as mask \
    FROM pipeline.datastorage_permission p \
    WHERE p.datastorage_root_id = :datastorage_root_id \
    AND p.datastorage_path != '' \
    AND p.datastorage_path NOT LIKE '%/%' \
    AND p.sid_type = 'GROUP' \
    AND p.sid_name in :group_sid_names \
    GROUP BY p.datastorage_path, p.datastorage_type \
) groups_permission \
ON (user_permission.datastorage_path = groups_permission.datastorage_path \
    AND user_permission.datastorage_type = groups_permission.datastorage_type)

StoragePermissionRepository.findDirectChildPermissions = \
SELECT \
    coalesce(user_permission.datastorage_path, groups_permission.datastorage_path) as datastorage_path, \
    coalesce(user_permission.datastorage_type, groups_permission.datastorage_type) as datastorage_path_type, \
    coalesce(user_permission.mask, groups_permission.mask) as mask \
FROM \
( \
    SELECT p.datastorage_path, p.datastorage_type, bit_or(p.mask) as mask \
    FROM pipeline.datastorage_permission p \
    WHERE p.datastorage_root_id = :datastorage_root_id \
    AND p.datastorage_path LIKE :datastorage_path || '/%' \
    AND p.datastorage_path NOT LIKE :datastorage_path || '/%/%' \
    AND p.sid_type = 'USER' \
    AND p.sid_name = :user_sid_name \
    GROUP BY p.datastorage_path, p.datastorage_type \
) user_permission \
FULL JOIN \
( \
    SELECT p.datastorage_path, p.datastorage_type, bit_or(p.mask) as mask \
    FROM pipeline.datastorage_permission p \
    WHERE p.datastorage_root_id = :datastorage_root_id \
    AND p.datastorage_path LIKE :datastorage_path || '/%' \
    AND p.datastorage_path NOT LIKE :datastorage_path || '/%/%' \
    AND p.sid_type = 'GROUP' \
    AND p.sid_name in :group_sid_names \
    GROUP BY p.datastorage_path, p.datastorage_type \
) groups_permission \
ON (user_permission.datastorage_path = groups_permission.datastorage_path \
    AND user_permission.datastorage_type = groups_permission.datastorage_type)

StoragePermissionRepository.copyFilePermissions = \
INSERT \
INTO pipeline.datastorage_permission ( \
    datastorage_root_id, \
    datastorage_path, \
    datastorage_type, \
    sid_name, \
    sid_type, \
    mask, \
    created \
) \
SELECT \
    p.datastorage_root_id, \
    :datastorage_new_path, \
    p.datastorage_type, \
    p.sid_name, \
    p.sid_type, \
    p.mask, \
    p.created \
FROM pipeline.datastorage_permission p \
WHERE p.datastorage_root_id = :datastorage_root_id \
AND p.datastorage_type = 'FILE' \
AND p.datastorage_path = :datastorage_old_path \
ON CONFLICT (datastorage_root_id, datastorage_path, datastorage_type, sid_name, sid_type) \
DO UPDATE SET \
mask = excluded.mask, \
created = excluded.created

StoragePermissionRepository.copyFolderPermissions = \
INSERT \
INTO pipeline.datastorage_permission ( \
    datastorage_root_id, \
    datastorage_path, \
    datastorage_type, \
    sid_name, \
    sid_type, \
    mask, \
    created \
) \
SELECT \
    p.datastorage_root_id, \
    regexp_replace(p.datastorage_path, :datastorage_old_path, :datastorage_new_path), \
    p.datastorage_type, \
    p.sid_name, \
    p.sid_type, \
    p.mask, \
    p.created \
FROM pipeline.datastorage_permission p \
WHERE p.datastorage_root_id = :datastorage_root_id \
AND p.datastorage_type = 'FOLDER' \
AND (p.datastorage_path = :datastorage_old_path \
OR p.datastorage_path LIKE :datastorage_old_path || '/%') \
ON CONFLICT (datastorage_root_id, datastorage_path, datastorage_type, sid_name, sid_type) \
DO UPDATE SET \
mask = excluded.mask, \
created = excluded.created

StoragePermissionRepository.deleteFilePermissions= \
DELETE \
FROM pipeline.datastorage_permission p \
WHERE p.datastorage_root_id = :datastorage_root_id \
AND p.datastorage_type = 'FILE' \
AND p.datastorage_path = :datastorage_path

StoragePermissionRepository.deleteFolderPermissions= \
DELETE \
FROM pipeline.datastorage_permission p \
WHERE p.datastorage_root_id = :datastorage_root_id \
AND (p.datastorage_path = :datastorage_path \
    AND p.datastorage_type = 'FOLDER' \
    OR p.datastorage_path LIKE :datastorage_path || '/%')

StoragePermissionRepository.findAggregatedMask= \
SELECT \
bit_or(COALESCE(user_permission.mask, group_permission.mask)) as mask \
FROM \
( \
    SELECT p.datastorage_path, bit_or(p.mask) as mask \
    FROM pipeline.datastorage_permission p \
    WHERE p.datastorage_root_id = :datastorage_root_id \
    AND (p.datastorage_path = :datastorage_path \
        AND p.datastorage_type = 'FOLDER' \
        OR p.datastorage_path LIKE :datastorage_path || '/%') \
    AND p.sid_type = 'USER' \
    AND p.sid_name = :user_sid_name \
    GROUP BY p.datastorage_type, p.datastorage_path \
) user_permission \
FULL JOIN \
( \
    SELECT p.datastorage_path, bit_or(p.mask) as mask \
    FROM pipeline.datastorage_permission p \
    WHERE p.datastorage_root_id = :datastorage_root_id \
    AND (p.datastorage_path = :datastorage_path \
        AND p.datastorage_type = 'FOLDER' \
        OR p.datastorage_path LIKE :datastorage_path || '/%') \
    AND p.sid_type = 'GROUP' \
    AND p.sid_name in :group_sid_names \
    GROUP BY p.datastorage_type, p.datastorage_path \
) group_permission \
ON (user_permission.datastorage_path = group_permission.datastorage_path)

StoragePermissionRepository.findAggregatedMaskForUserWithoutGroups= \
SELECT bit_or(p.mask) as mask \
FROM pipeline.datastorage_permission p \
WHERE p.datastorage_root_id = :datastorage_root_id \
AND (p.datastorage_path = :datastorage_path \
    AND p.datastorage_type = 'FOLDER' \
    OR p.datastorage_path LIKE :datastorage_path || '/%') \
AND p.sid_type = 'USER' \
AND p.sid_name = :user_sid_name
