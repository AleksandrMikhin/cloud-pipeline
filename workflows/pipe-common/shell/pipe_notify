#!/usr/bin/env bash
# Copyright 2017-2020 EPAM Systems, Inc. (https://www.epam.com/)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Usage examples:
#
# pipe_notify "notification subject" \
#             "notification body" \
#             receiver
#
# pipe_notify "notification subject" \
#             "notification body" \
#             receiver \
#             copy_user1,copy_user2 \
#             custom_template_parameter1 value1 \
#             custom_template_parameter2 value2

# Required args
NOTIFICATION_SUBJECT=$1
NOTIFICATION_BODY=$2
NOTIFICATION_RECEIVER=$3
# Optional args
NOTIFICATION_COPY_USERS=$4

# Check global variables
if [ -z "$LOG_DIR" ]
  then
    echo "[WARN] Log directory is not set, using /runs"
	  export LOG_DIR=/runs
fi

# Check arguments
if [ -z "$NOTIFICATION_SUBJECT" ]
  then
    echo "[ERROR] Notification subject shall be supplied"
	  exit 1
fi

if [ -z "$NOTIFICATION_BODY" ]
  then
    echo "[ERROR] Notification body shall be supplied"
	  exit 1
fi

if [ -z "$NOTIFICATION_RECEIVER" ]
  then
    echo "[ERROR] Notification receiver user name shall be supplied"
	  exit 1
fi

if [ -z "$NOTIFICATION_COPY_USERS" ]
  then
    echo "[WARN] Notification copy users are not set, using no copy users"
    export NOTIFICATION_COPY_USERS="[]"
  else
    export NOTIFICATION_COPY_USERS="\"${NOTIFICATION_COPY_USERS}\".split(',')"
fi

if [ "$#" -lt 4 ]
  then
    echo "[WARN] Notification parameters are not set, using no parameters"
	  export NOTIFICATION_PARAMETERS="{}"
  else
    num_args=$#
    if [ $((num_args%2)) -ne 0 ]
    then
        echo "[ERROR] Notification parameters should be specified as key-value pairs"
        exit 1
    fi

    dict="{"
    for i in $(seq 5 $#)
    do
        arg=$(eval echo \${$i})
        if [ $((i%2)) -ne 0 ]
        then
            dict="${dict}'$arg':"
        else
            dict="${dict}'$arg',"
        fi
    done
    dict="${dict}}"

    export NOTIFICATION_PARAMETERS="$dict"
fi

# Call notification API
# subject, body, to_user, copy_users=None, parameters=None
CMD="import pipeline.api;"
CMD="${CMD} pipe=pipeline.api.PipelineAPI(\"${API}\", \"${LOG_DIR}\");"
CMD="${CMD} subject=\"${NOTIFICATION_SUBJECT}\";"
CMD="${CMD} body=\"${NOTIFICATION_BODY}\";"
CMD="${CMD} receiver=\"${NOTIFICATION_RECEIVER}\";"
CMD="${CMD} copy_users=${NOTIFICATION_COPY_USERS};"
CMD="${CMD} parameters=${NOTIFICATION_PARAMETERS};"
CMD="${CMD} pipe.create_notification(subject, body, receiver, copy_users, parameters);"
$CP_PYTHON2_PATH -c "$CMD"
